{"version":3,"sources":["app.js"],"names":["navigator","serviceWorker","register","then","console","log","url","body","document","querySelector","currencyConvertFrom","currencyConvertTo","addEventListener","button","createOptionNode","currency","optionNode","createElement","innerText","addCurrenciesToDOM","currencies","length","map","appendChild","fetchCurrencyRate","fetch","inputAmount","exchangeRate","data","calculateExchangeRate","value","Object","values","input","originalCurrencyInputField","convertedCurrencyInputField","convertedCurrency","toFixed","concat","catch","err","error","getExchangeRate","curr1","curr2","arguments","currencyUrl","buildAPIUrl","addEventListeners","e","event","keyCode","detectEnterPressed","init","window","caches","match","response","json","keys","results","sort","res"],"mappings":"sJAAI,kBAAmBA,WACrBA,UAAUC,cAAcC,SAAS,WAAWC,KAAK,WAC/CC,QAAQC,IAAI,+BAAZD,SAAAA,iBAAY,mBAAZ,WACD,IAuDOE,EAzDRC,EAAAC,SAAAC,cAAA,QAGDC,EAAAF,SAAAC,cAAA,2BAKOE,EAAoBH,SAASC,cAAc,yBAHnDD,EAASI,SAAiBH,cAAA,YAClBF,EAA8BC,SAApCC,cACA,yBAEMI,EAAgCL,SAAAC,cACtC,0BAUA,SAASK,EAAiBC,GACxB,GAAiB,cAAbA,EACF,MAAO,0CAGT,IAAMC,EAAaR,SAASS,cAAc,UAG1C,OAFAD,EAAWE,UAAYH,EAEhBC,EAMT,SAASG,EAAmBC,GAC1B,GAA0B,IAAtBA,EAAWC,QAA+B,cAAfD,EAC7B,MAAO,iDAGTA,EAAWE,IAAI,SAAAP,GACbL,EAAoBa,YAAYT,EAAiBC,IACjDJ,EAAkBY,YAAYT,EAAiBC,MAkDhD,SAAAS,EAAAlB,GAFD,GAAY,cAARA,EAIJmB,MAAA,qCAGIA,MAAMC,GACNvB,KAAMwB,SAAAA,GAAAA,OAAAA,EAAAA,SAFPxB,KAAK,SAAAyB,GAIJC,IAAAA,EAlDgBrB,SAASC,cAAc,gBAAgBqB,MAoDlDH,EAAAI,OAAAC,OAAAJ,IA8CX,SAA+BD,EAAcM,GAO3CC,GAAAA,IAAAA,UAAAA,OACAC,MAAAA,uFAGF,IAAAC,EAAAH,EAAAN,EAJEO,EAA2BJ,MAAQG,EAOrCE,EAA6BL,MAAAM,EAAAC,QAAA,KApE3BR,WAAAA,EAAAA,mBAAAF,GAAAW,OAAA,CAAAZ,OAQGa,MAAM,SAAAC,GAAA,OAOXpC,QAAAqC,MAAA,wEALgFD,KA0B/E,SAAAE,IAKDlB,EAjBE,SAAAmB,EAAAC,GACD,OAAA,IAAAC,UAAAxB,OALU,wEAGHyB,0DAAwEH,EAAxE,IAAiFC,EAAjF,iBAWMG,CAHMvC,SAASC,cAAc,2BAA2BqB,MAOtEtB,SAAAC,cAAA,yBAAAqB,QA8BA,SAASkB,IAKTnC,EAAAD,iBAAA,QAAA8B,GAHEnC,EAAKK,iBAAiB,UAAW,SAAAqC,GAAA,OAvB/BP,SAAAA,GACD,GAAA,cAAAQ,EACF,MAAA,oFAHuB,KAAlBA,EAAMC,SACRT,IAuBoCU,CAAmBH,KAW3DI,IArHQ/C,EAAM,0DAER,WAAYgD,QACdC,OAAOC,MAAMlD,GAAKH,KAAK,SAAAsD,GACjBA,GACFA,EAASC,OAAOvD,KAAK,SAAAyB,GAGnBT,EAFmBY,OAAO4B,KAAK/B,EAAKgC,SAASC,YAQrDpC,MAAMnB,GACEH,KAAA,SAAA2D,GAAA,OAAWJ,EAAXA,SACLvD,KAAK,SAAAyB,GAGJT,EAFmBY,OAAA4B,KAAY/B,EAAKgC,SAAjBC,UAIdtB,MACLnC,SAAAA,GAAAA,OARJA,QAAAqC,MAAA,2EAYDD","file":"app.min.js","sourcesContent":["if ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('./sw.js').then(() => {\n    console.log('Service Worker Registered');\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const body = document.querySelector('body');\n  const currencyConvertFrom = document.querySelector('.currency__convert-from');\n  const currencyConvertTo = document.querySelector('.currency__convert-to');\n  const button = document.querySelector('.convert');\n  const originalCurrencyInputField = document.querySelector(\n    'input#original_amount',\n  );\n  const convertedCurrencyInputField = document.querySelector(\n    'input#converted_amount',\n  );\n\n  /**\n   * Create \"option\" HTML Element and set inline value of the currency\n   */\n  function createOptionNode(currency) {\n    if (currency === 'undefined') {\n      return 'Currency parameter cannot be undefined.';\n    }\n\n    const optionNode = document.createElement('option');\n    optionNode.innerText = currency;\n\n    return optionNode;\n  }\n\n  /**\n   * Add each currency to both select HTML Elements on the DOM\n   */\n  function addCurrenciesToDOM(currencies) {\n    if (currencies.length === 0 || currencies === 'undefined') {\n      return 'Currencies array cannot be empty or undefined.';\n    }\n\n    currencies.map(currency => {\n      currencyConvertFrom.appendChild(createOptionNode(currency));\n      currencyConvertTo.appendChild(createOptionNode(currency));\n    });\n  }\n\n  /**\n   * Get amount in the input field\n   */\n  function getInputAmount() {\n    const inputAmount = document.querySelector('input#amount').value;\n    return inputAmount;\n  }\n\n  /**\n   * Get a list of all the currencies using the API\n   */\n  function fetchListOfCurrencies() {\n    const url = 'https://free.currencyconverterapi.com/api/v5/currencies';\n\n    if ('caches' in window) {\n      caches.match(url).then(response => {\n        if (response) {\n          response.json().then(data => {\n            const currencies = Object.keys(data.results).sort();\n\n            addCurrenciesToDOM(currencies);\n          });\n        }\n      });\n    }\n\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const currencies = Object.keys(data.results).sort();\n\n        addCurrenciesToDOM(currencies);\n      })\n      .catch(err =>\n        console.error(\n          `The following error occured while trying to get the list of currencies. ${err}`,\n        ),\n      );\n  }\n\n  /**\n   * Fetch the conversion rate between two currencies\n   */\n  function fetchCurrencyRate(url) {\n    if (url === 'undefined') {\n      return 'URL Parameter cannot be undefined.';\n    }\n\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const inputAmount = getInputAmount();\n        const exchangeRate = Object.values(data);\n\n        calculateExchangeRate(...exchangeRate, inputAmount);\n      })\n      .catch(err =>\n        console.error(\n          `The following error occured while trying to get the conversion rate. ${err}`,\n        ),\n      );\n  }\n\n  /**\n   * Build the API URL to use to get the conversion rate for a specific set of currencies\n   */\n  function buildAPIUrl(curr1, curr2) {\n    if (arguments.length !== 2) {\n      return 'You need to specify both arguments for the URL to be built correctly.';\n    }\n\n    const currencyUrl = `https://free.currencyconverterapi.com/api/v5/convert?q=${curr1}_${curr2}&compact=ultra`;\n    return currencyUrl;\n  }\n\n  /**\n   * Get the two currencies selected in the DOM and get the exchange rate\n   */\n  function getExchangeRate() {\n    const currency1 = document.querySelector('.currency__convert-from').value;\n    const currency2 = document.querySelector('.currency__convert-to').value;\n\n    const url = buildAPIUrl(currency1, currency2);\n    fetchCurrencyRate(url);\n  }\n\n  /**\n   * Detect if the enter button has been pressed and get the exchange rate\n   */\n  function detectEnterPressed(event) {\n    if (event === 'undefined') {\n      return \"Most likely the DOM key event listener wasn't started. 'Enter' key will not fire.\";\n    }\n\n    if (event.keyCode === 13) {\n      getExchangeRate();\n    }\n  }\n\n  /**\n   * Calculate the exchange rate based on the amount entered and the currencies selected\n   */\n  function calculateExchangeRate(exchangeRate, input) {\n    if (arguments.length !== 2) {\n      return 'You need to specify both arguments for the exchange rate to be calculated correctly.';\n    }\n\n    const convertedCurrency = input * exchangeRate;\n\n    originalCurrencyInputField.value = input;\n    convertedCurrencyInputField.value = convertedCurrency.toFixed(2);\n  }\n\n  /**\n   * Add event listeners that is needed\n   */\n  function addEventListeners() {\n    button.addEventListener('click', getExchangeRate);\n    body.addEventListener('keydown', e => detectEnterPressed(e));\n  }\n\n  /**\n   * Add Event Listeners and get the currencies to display on the DOM\n   */\n  function init() {\n    addEventListeners();\n    fetchListOfCurrencies();\n  }\n\n  init();\n});\n"]}