{"version":3,"sources":["app.js"],"names":["document","addEventListener","body","querySelector","currencyConvertFrom","currencyConvertTo","currencyButton","createOptionNode","currency","optionNode","createElement","innerText","fetchListOfCurrencies","fetch","then","res","json","data","currencies","length","map","appendChild","addCurrenciesToDOM","Object","keys","results","sort","catch","console","error","err","fetchCurrencyRate","url","inputAmount","exchangeRate","calculateExchangeRate","value","values","input","originalCurrencyTextArea","convertedCurrencyTextArea","convertedCurrency","toFixed","concat","getExchangeRate","curr1","curr2","arguments","currencyUrl","buildAPIUrl","addEventListeners","e","event","keyCode","detectEnterPressed","init"],"mappings":"sJAAAA,SAASC,iBAAiB,mBAAoB,WAC5C,IAAMC,EAAOF,SAASG,cAAc,QAC9BC,EAAsBJ,SAASG,cAAc,0BAC7CE,EAAoBL,SAASG,cAAc,wBAHnDH,EAAAA,SAA0BG,cAAoB,qBACtCD,EAAOF,SAAbG,cACA,8BAEMG,EAA0BH,SAATA,cACvB,+BAUA,SAASI,EAAiBC,GACxB,GAAiB,cAAbA,EACF,MAAO,0CAGT,IAAMC,EAAaT,SAASU,cAAc,UAG1C,OAFAD,EAAWE,UAAYH,EAEhBC,EA4BT,SAASG,IACPC,MAAM,2DACEC,KAAA,SAAAC,GAAA,OAAWC,EAAXA,SACLF,KAAK,SAAAG,IAzBV,SAA4BC,GAC1B,GAA0B,IAAtBA,EAAWC,QAA+B,cAAfD,EAC7B,OAGFA,EAAWE,IAAI,SAAAZ,GACbJ,EAAoBiB,YAAYd,EAAiBC,IACjDH,EAAkBgB,YAAYd,EAAiBC,MAqB7Cc,CAFmBC,OAAAC,KAAYP,EAAKQ,SAAjBC,UAIdC,MACLC,SAAAA,GAAAA,OARJA,QAAAC,MAAA,2EAYDC,KAQE,SAAAC,EAAAC,GAFD,GAAY,cAARA,EAIJnB,MAAA,qCAGIA,MAAMoB,GACNnB,KAAMoB,SAAAA,GAAAA,OAAAA,EAAAA,SAFPpB,KAAK,SAAAG,GAIJkB,IAAAA,EApCgBnC,SAASG,cAAc,gBAAgBiC,MAsClDF,EAAAX,OAAAc,OAAApB,IA8CX,SAA+BiB,EAAcI,GAO3CC,GAAyBH,IAAzBG,UAAAA,OACAC,MAAAA,uFAGF,IAAAC,EAAAH,EAAAJ,EAJEK,EAAyBH,MAAQE,EAOnCE,EAAAJ,MAA6BK,EAAAC,QAAA,KApE3BP,WAAAA,EAAAA,mBAAAD,GAAAS,OAAA,CAAAV,OAQGN,MAAM,SAAAG,GAAA,OAOXF,QAAAC,MAAA,wEALgFC,KA0B/E,SAAAc,IAKDb,EAjBE,SAAAc,EAAAC,GACD,OAAA,IAAAC,UAAA5B,OALU,wEAGH6B,0DAAwEH,EAAxE,IAAiFC,EAAjF,iBAWMG,CAHMjD,SAASG,cAAc,0BAA0BiC,MAOrEpC,SAAAG,cAAA,wBAAAiC,QA8BA,SAASc,IAKT5C,EAAAL,iBAAA,QAAA2C,GAHE1C,EAAKD,iBAAiB,UAAW,SAAAkD,GAAA,OAvB/BP,SAAAA,GACD,GAAA,cAAAQ,EACF,MAAA,oFAHuB,KAAlBA,EAAMC,SACRT,IAuBoCU,CAAmBH,KAW3DI,IA3JF3C","file":"app.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const body = document.querySelector('body');\n  const currencyConvertFrom = document.querySelector('.currency_convert_from');\n  const currencyConvertTo = document.querySelector('.currency_convert_to');\n  const currencyButton = document.querySelector('.convert_currency');\n  const originalCurrencyTextArea = document.querySelector(\n    'textarea#original_currency',\n  );\n  const convertedCurrencyTextArea = document.querySelector(\n    'textarea#converted_currency',\n  );\n\n  /**\n   * Create \"option\" HTML Element and set inline value of the currency\n   */\n  function createOptionNode(currency) {\n    if (currency === 'undefined') {\n      return 'Currency parameter cannot be undefined.';\n    }\n\n    const optionNode = document.createElement('option');\n    optionNode.innerText = currency;\n\n    return optionNode;\n  }\n\n  /**\n   * Add each currency to both select HTML Elements on the DOM\n   */\n  function addCurrenciesToDOM(currencies) {\n    if (currencies.length === 0 || currencies === 'undefined') {\n      return 'Currencies array cannot be empty or undefined.';\n    }\n\n    currencies.map(currency => {\n      currencyConvertFrom.appendChild(createOptionNode(currency));\n      currencyConvertTo.appendChild(createOptionNode(currency));\n    });\n  }\n\n  /**\n   * Get amount in the input field\n   */\n  function getInputAmount() {\n    const inputAmount = document.querySelector('input#amount').value;\n    return inputAmount;\n  }\n\n  /**\n   * Get a list of all the currencies using the API\n   */\n  function fetchListOfCurrencies() {\n    fetch('https://free.currencyconverterapi.com/api/v5/currencies')\n      .then(res => res.json())\n      .then(data => {\n        const currencies = Object.keys(data.results).sort();\n\n        addCurrenciesToDOM(currencies);\n      })\n      .catch(err =>\n        console.error(\n          `The following error occured while trying to get the list of currencies. ${err}`,\n        ),\n      );\n  }\n\n  /**\n   * Fetch the conversion rate between two currencies\n   */\n  function fetchCurrencyRate(url) {\n    if (url === 'undefined') {\n      return 'URL Parameter cannot be undefined.';\n    }\n\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const inputAmount = getInputAmount();\n        const exchangeRate = Object.values(data);\n\n        calculateExchangeRate(...exchangeRate, inputAmount);\n      })\n      .catch(err =>\n        console.error(\n          `The following error occured while trying to get the conversion rate. ${err}`,\n        ),\n      );\n  }\n\n  /**\n   * Build the API URL to use to get the conversion rate for a specific set of currencies\n   */\n  function buildAPIUrl(curr1, curr2) {\n    if (arguments.length !== 2) {\n      return 'You need to specify both arguments for the URL to be built correctly.';\n    }\n\n    const currencyUrl = `https://free.currencyconverterapi.com/api/v5/convert?q=${curr1}_${curr2}&compact=ultra`;\n    return currencyUrl;\n  }\n\n  /**\n   * Get the two currencies selected in the DOM and get the exchange rate\n   */\n  function getExchangeRate() {\n    const currency1 = document.querySelector('.currency_convert_from').value;\n    const currrency2 = document.querySelector('.currency_convert_to').value;\n\n    const url = buildAPIUrl(currency1, currrency2);\n    fetchCurrencyRate(url);\n  }\n\n  /**\n   * Detect if the enter button has been pressed and get the exchange rate\n   */\n  function detectEnterPressed(event) {\n    if (event === 'undefined') {\n      return \"Most likely the DOM key event listener wasn't started. 'Enter' key will not fire.\";\n    }\n\n    if (event.keyCode === 13) {\n      getExchangeRate();\n    }\n  }\n\n  /**\n   * Calculate the exchange rate based on the amount entered and the currencies selected\n   */\n  function calculateExchangeRate(exchangeRate, input) {\n    if (arguments.length !== 2) {\n      return 'You need to specify both arguments for the exchange rate to be calculated correctly.';\n    }\n\n    const convertedCurrency = input * exchangeRate;\n\n    originalCurrencyTextArea.value = input;\n    convertedCurrencyTextArea.value = convertedCurrency.toFixed(2);\n  }\n\n  /**\n   * Add event listeners that is needed\n   */\n  function addEventListeners() {\n    currencyButton.addEventListener('click', getExchangeRate);\n    body.addEventListener('keydown', e => detectEnterPressed(e));\n  }\n\n  /**\n   * Add Event Listeners and get the currencies to display on the DOM\n   */\n  function init() {\n    addEventListeners();\n    fetchListOfCurrencies();\n  }\n\n  init();\n});\n"]}