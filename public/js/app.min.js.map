{"version":3,"sources":["app.js"],"names":["navigator","serviceWorker","register","then","console","log","document","addEventListener","url","body","querySelector","currencyConvertFrom","currencyConvertTo","button","createNode","nodeType","currency","arguments","length","node","createElement","innerText","addCurrenciesToDOM","currencies","nodeTypeToCreate","map","appendChild","fetchCurrencyRate","fetch","inputAmount","exchangeRate","data","calculateExchangeRate","value","Object","values","input","originalCurrencyInputField","convertedCurrencyInputField","convertedCurrency","toFixed","concat","catch","err","error","getExchangeRate","curr1","curr2","currencyUrl","buildAPIUrl","addEventListeners","e","event","keyCode","detectEnterPressed","init","window","caches","match","response","json","keys","results","sort","res"],"mappings":"sJAGI,kBAAmBA,WAHvBA,UAAAC,cAAAC,SAAA,SAAAC,KAAA,WAKIC,QAAQC,IAAI,+BAiBhBC,SAASC,iBAAiB,mBAAoB,WAH9C,IAyDUC,EAzDVC,EAAAH,SAAAI,cAAA,QAKQC,EAAsBL,SAASI,cAAc,2BAC7CE,EAAoBN,SAASI,cAAc,yBAHnDJ,EAASC,SAAiBG,cAAA,YAClBD,EAA8BH,SAApCI,cACA,yBAEMG,EAAgCP,SAAAI,cACtC,0BAUA,SAASI,EAAWC,EAAUC,GAC5B,GAAyB,IAArBC,UAAUC,OACZ,MAAO,2EAGT,IAAMC,EAAOb,SAASc,cAAcL,GAGpC,OAFAI,EAAKE,UAAYL,EAEVG,EAMT,SAASG,EAAmBC,GAC1B,GAA0B,IAAtBA,EAAWL,QAA+B,cAAfK,EAC7B,MAAO,iDAGT,IAAMC,EAAmB,SAEzBD,EAAWE,IAAI,SAAAT,GACbL,EAAoBe,YAAYZ,EAAWU,EAAkBR,IAC7DJ,EAAkBc,YAAYZ,EAAWU,EAAkBR,MAsD5D,SAAAW,EAAAnB,GAFD,GAAY,cAARA,EAIJoB,MAAA,qCAGIA,MAAMC,GACN1B,KAAM2B,SAAAA,GAAAA,OAAAA,EAAAA,SAFP3B,KAAK,SAAA4B,GAIJC,IAAAA,EAtDgB1B,SAASI,cAAc,gBAAgBuB,MAwDlDH,EAAAI,OAAAC,OAAAJ,IA8CX,SAA+BD,EAAcM,GAO3CC,GAAAA,IAAAA,UAAAA,OACAC,MAAAA,uFAGF,IAAAC,EAAAH,EAAAN,EAJEO,EAA2BJ,MAAQG,EAOrCE,EAA6BL,MAAAM,EAAAC,QAAA,KApE3BR,WAAAA,EAAAA,mBAAAF,GAAAW,OAAA,CAAAZ,OAQGa,MAAM,SAAAC,GAAA,OAOXvC,QAAAwC,MAAA,wEALgFD,KA0B/E,SAAAE,IAKDlB,EAjBE,SAAAmB,EAAAC,GACD,OAAA,IAAA9B,UAAAC,OALU,wEAGH8B,0DAAwEF,EAAxE,IAAiFC,EAAjF,iBAWME,CAHM3C,SAASI,cAAc,2BAA2BuB,MAOtE3B,SAAAI,cAAA,yBAAAuB,QA8BA,SAASiB,IAKTrC,EAAAN,iBAAA,QAAAsC,GAHEpC,EAAKF,iBAAiB,UAAW,SAAA4C,GAAA,OAvB/BN,SAAAA,GACD,GAAA,cAAAO,EACF,MAAA,oFAHuB,KAAlBA,EAAMC,SACRR,IAuBoCS,CAAmBH,KAW3DI,IAzHQ/C,EAAM,0DAGR,WAAYgD,OACdC,OAAOC,MAAMlD,GAAKL,KAAK,SAAAwD,GACjBA,GACFA,EAASC,OAAOzD,KAAK,SAAA4B,GAGnBT,EAFmBY,OAAO2B,KAAK9B,EAAK+B,SAASC,YAWrDnC,MAAMpB,GACEL,KAAA,SAAA6D,GAAA,OAAWJ,EAAXA,SACLzD,KAAK,SAAA4B,GAGJT,EAFmBY,OAAA2B,KAAY9B,EAAK+B,SAAjBC,UAIdrB,MACLtC,SAAAA,GAAAA,OARJA,QAAAwC,MAAA,2EAYDD","file":"app.min.js","sourcesContent":["/**\n * Register Service Worker\n */\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('sw.js').then(() => {\n    console.log('Service Worker Registered');\n  });\n}\n\n// (function() {\n//   // check for support\n//   if (!('indexedDB' in window)) {\n//     console.log(\"This browser doesn't support IndexedDB\");\n//     return;\n//   }\n\n//   const dbPromise = idb.open('test-db1', 1);\n// })();\n\n/**\n * Add all the logic of the website in the DOMContentLoaded Event Listener\n */\ndocument.addEventListener('DOMContentLoaded', () => {\n  const body = document.querySelector('body');\n  const currencyConvertFrom = document.querySelector('.currency__convert-from');\n  const currencyConvertTo = document.querySelector('.currency__convert-to');\n  const button = document.querySelector('.convert');\n  const originalCurrencyInputField = document.querySelector(\n    'input#original_amount',\n  );\n  const convertedCurrencyInputField = document.querySelector(\n    'input#converted_amount',\n  );\n\n  /**\n   * Create HTML Element and set inline value of the currency\n   */\n  function createNode(nodeType, currency) {\n    if (arguments.length !== 2) {\n      return 'You need to specify both arguments for the node to be created correctly.';\n    }\n\n    const node = document.createElement(nodeType);\n    node.innerText = currency;\n\n    return node;\n  }\n\n  /**\n   * Add each currency to both select HTML Elements on the DOM\n   */\n  function addCurrenciesToDOM(currencies) {\n    if (currencies.length === 0 || currencies === 'undefined') {\n      return 'Currencies array cannot be empty or undefined.';\n    }\n\n    const nodeTypeToCreate = 'option';\n\n    currencies.map(currency => {\n      currencyConvertFrom.appendChild(createNode(nodeTypeToCreate, currency));\n      currencyConvertTo.appendChild(createNode(nodeTypeToCreate, currency));\n    });\n  }\n\n  /**\n   * Get amount in the input field\n   */\n  function getInputAmount() {\n    const inputAmount = document.querySelector('input#amount').value;\n    return inputAmount;\n  }\n\n  /**\n   * Get a list of all the currencies using the API\n   */\n  function fetchListOfCurrencies() {\n    const url = 'https://free.currencyconverterapi.com/api/v5/currencies';\n\n    // Before we fetch from the API itself, check if we don't have a cached version locally\n    if ('caches' in window) {\n      caches.match(url).then(response => {\n        if (response) {\n          response.json().then(data => {\n            const currencies = Object.keys(data.results).sort();\n\n            addCurrenciesToDOM(currencies);\n          });\n        }\n      });\n\n      return;\n    }\n\n    // This will fetch the data from the API if we don't have a cached version\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const currencies = Object.keys(data.results).sort();\n\n        addCurrenciesToDOM(currencies);\n      })\n      .catch(err =>\n        console.error(\n          `The following error occured while trying to get the list of currencies. ${err}`,\n        ),\n      );\n  }\n\n  /**\n   * Fetch the exchange rate between two currencies\n   */\n  function fetchCurrencyRate(url) {\n    if (url === 'undefined') {\n      return 'URL Parameter cannot be undefined.';\n    }\n\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const inputAmount = getInputAmount();\n        const exchangeRate = Object.values(data);\n\n        calculateExchangeRate(...exchangeRate, inputAmount);\n      })\n      .catch(err =>\n        console.error(\n          `The following error occured while trying to get the conversion rate. ${err}`,\n        ),\n      );\n  }\n\n  /**\n   * Build the API URL to use to get the conversion rate for a specific set of currencies\n   */\n  function buildAPIUrl(curr1, curr2) {\n    if (arguments.length !== 2) {\n      return 'You need to specify both arguments for the URL to be built correctly.';\n    }\n\n    const currencyUrl = `https://free.currencyconverterapi.com/api/v5/convert?q=${curr1}_${curr2}&compact=ultra`;\n    return currencyUrl;\n  }\n\n  /**\n   * Get the two currencies selected in the DOM and get the exchange rate\n   */\n  function getExchangeRate() {\n    const currency1 = document.querySelector('.currency__convert-from').value;\n    const currency2 = document.querySelector('.currency__convert-to').value;\n\n    const url = buildAPIUrl(currency1, currency2);\n    fetchCurrencyRate(url);\n  }\n\n  /**\n   * Detect if the enter button has been pressed and get the exchange rate\n   */\n  function detectEnterPressed(event) {\n    if (event === 'undefined') {\n      return \"Most likely the DOM key event listener wasn't started. 'Enter' key will not fire.\";\n    }\n\n    if (event.keyCode === 13) {\n      getExchangeRate();\n    }\n  }\n\n  /**\n   * Calculate the exchange rate based on the amount entered and the currencies selected\n   */\n  function calculateExchangeRate(exchangeRate, input) {\n    if (arguments.length !== 2) {\n      return 'You need to specify both arguments for the exchange rate to be calculated correctly.';\n    }\n\n    const convertedCurrency = input * exchangeRate;\n\n    originalCurrencyInputField.value = input;\n    convertedCurrencyInputField.value = convertedCurrency.toFixed(2);\n  }\n\n  /**\n   * Add event listeners that is needed\n   */\n  function addEventListeners() {\n    button.addEventListener('click', getExchangeRate);\n    body.addEventListener('keydown', e => detectEnterPressed(e));\n  }\n\n  /**\n   * Add Event Listeners and get the currencies to display on the DOM\n   */\n  function init() {\n    addEventListeners();\n    fetchListOfCurrencies();\n  }\n\n  init();\n});\n"]}